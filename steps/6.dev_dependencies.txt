У любого проекта есть как минимум два режима использования.
Их обычно называют средами. Например, когда разработчик
работает над проектом у себя на компьютере, то он запускает его в
среде разработки. Когда же проект попадает в то место, где им пользуются,
то тогда среду называют продакшеном (production).

Например, для разработки часто бывают нужны дополнительные пакеты,
которые помогают самому процессу разработки, например, пакеты для
автоматизированного тестирования кода. В продакшен среде эти пакеты ни
к чему, но вот время и место на диске они занимают. А это мешает, так
как для продакшен среды важно не тянуть за собой ненужных вещей.
Это сильно влияет на скорость доставки кода на продакшен

Например, для разработки часто бывают нужны дополнительные пакеты, которые
помогают самому процессу разработки, например, пакеты для
автоматизированного тестирования кода. В продакшен среде эти пакеты
ни к чему, но вот время и место на диске они занимают. А это мешает,
так как для продакшен среды важно не тянуть за собой ненужных вещей.
Это сильно влияет на скорость доставки кода на продакшен

# jest – тестовый фреймворк,
# с помощью которого пишутся автоматизированные тесты кода

> npm install --save-dev jest

Процедура установки здесь практически не отличается от установки
обычных пакетов. Разница только в том, что описание зависимости
появится не в dependencies, а в devDependencies.

  "devDependencies": {
    "jest": "^27.3.1"
  }

С точки зрения использования, эти пакеты ничем не отличаются от пакетов
устанавливаемых в dependencies. Разница только в том где их импортируют.
Как правило для тестирования кода создается отдельная директория,
внутри которой находится код тестов, которые запускаются только в среде
разработки. Поэтому импорты этого кода не пересекаются с импортами кода
самого проекта.